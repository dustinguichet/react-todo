{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5e81b52.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef } from 'react'\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  \n    const inputRef = useRef(null);\n  \n    useEffect(() => {\n      inputRef.current.focus();\n    });\n  \n    const handleChange = e => {\n      setInput(e.target.value);\n    };\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n  \n      props.onSubmit({\n        id: Math.floor(Math.random() * 9000),\n        text: input\n      });\n      setInput('');\n    };\n  \n    return (\n      <form onSubmit={handleSubmit} className='todo-form'>\n        {props.edit ? (\n          <>\n            <input\n              placeholder='Update your item'\n              value={input}\n              onChange={handleChange}\n              name='text'\n              ref={inputRef}\n              className='todo-input edit'\n            />\n            <button onClick={handleSubmit} className='todo-button edit'>\n              Update\n            </button>\n          </>\n        ) : (\n          <>\n            <input\n              placeholder='Add your today tasks'\n              value={input}\n              onChange={handleChange}\n              name='text'\n              className='todo-input'\n              ref={inputRef}\n            />\n            <button onClick={handleSubmit} className='todo-button'>\n              Add\n            </button>\n          </>\n        )}\n      </form>\n    );\n  }\n  \n  export default TodoForm;\n  \n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { RiEdit2Fill } from \"react-icons/ri\";\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n    const [edit, setEdit] = useState({\n      id: null,\n      value: ''\n    });\n  \n    const submitUpdate = value => {\n      updateTodo(edit.id, value);\n      setEdit({\n        id: null,\n        value: ''\n      });\n    };\n  \n    if (edit.id) {\n      return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n    }\n  \n    return todos.map((todo, index) => (\n      <div\n        className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n        key={index}\n      >\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n          {todo.text}\n        </div>\n        <div className='icons'>\n          <AiOutlineCloseCircle\n            onClick={() => removeTodo(todo.id)}\n            className='delete-icon'\n          />\n          <RiEdit2Fill\n            onClick={() => setEdit({ id: todo.id, value: todo.text })}\n            className='edit-icon'\n          />\n        </div>\n      </div>\n    ));\n  };\n  \n  export default Todo;\n","import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n  \n    const addTodo = todo => {\n      if (!todo.text || /^\\s*$/.test(todo.text)) {\n        return;\n      }\n  \n      const newTodos = [todo, ...todos];\n  \n      setTodos(newTodos);\n      console.log(...todos);\n    };\n  \n    const updateTodo = (todoId, newValue) => {\n      if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n        return;\n      }\n  \n      setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n  \n    const removeTodo = id => {\n      const removedArr = [...todos].filter(todo => todo.id !== id);\n  \n      setTodos(removedArr);\n    };\n  \n    const completeTodo = id => {\n      let updatedTodos = todos.map(todo => {\n        if (todo.id === id) {\n          todo.isComplete = !todo.isComplete;\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n    };\n  \n    return (\n      <>\n        <h1>Get It Done!</h1>\n        <TodoForm onSubmit={addTodo} />\n        <Todo\n          todos={todos}\n          completeTodo={completeTodo}\n          removeTodo={removeTodo}\n          updateTodo={updateTodo}\n        />\n      </>\n    );\n  }\n  \n  export default TodoList;","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}